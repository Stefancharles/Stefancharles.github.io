(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{505:function(t,s,n){"use strict";n.r(s);var a=n(16),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("有关数据结构栈的一些笔记。")]),t._v(" "),n("h2",{attrs:{id:"_1-双栈"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-双栈"}},[t._v("#")]),t._v(" 1.双栈")]),t._v(" "),n("p",[t._v("将编号为 0 和 1 的两个栈存放于一个数组空间 V[m]中，栈底分别处于数组的两端。当第0 号栈的栈顶指针 top[0]等于-1 时该栈为空；当第 1 号栈的栈顶指针 top[1]等于 m 时，该栈为空。两个栈均从两端向中间增长。")]),t._v(" "),n("p",[t._v("试编写双栈初始化，判断栈空、栈满、进栈和出栈等算法的函数。")]),t._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('#include <stdio.h>\n#include <stdlib.h>\n#include <iostream>\nusing namespace std;\n\ntypedef int SElemType;\n\n//双栈数据结构定义\ntypedef struct\n{\n\tint top[2], bot[2];\t\t//定义栈顶和栈底指针\n\tSElemType* V;\t\t\t//栈数组\n\tint m;\t\t\t\t\t//栈最大可容纳元素个数\n}DblStack;\n\n//初始化双栈\nvoid InitDblStack(DblStack& stack, int Maxsize)\n{\n\tSElemType* arr = (SElemType*)malloc(sizeof(SElemType));//申请空间\n\tstack.V = arr;\t\t\t\t\t\t\t//将V指针指向申请的空间\n\tstack.m = Maxsize;\t\t\t\t\t\t//初始化最大元素个数\n\tstack.top[0] = -1;\t\t\t\t\t\t//左栈栈顶指针初始化\n\tstack.bot[0] = 0;\t\t\t\t\t\t//左栈栈底指针初始化\n\tstack.top[1] = stack.m;\t\t\t\t\t//右栈栈顶指针初始化\n\tstack.bot[1] = stack.m - 1;\t\t\t\t//右栈栈底指针初始化\n}\n\n//判断栈空\nbool EmptyDblStack(DblStack stack)\n{\n\tif (stack.top[0] == -1 && stack.top[1] == stack.m)\n\t\treturn true;\t\t\n\treturn false;\t\t\t\n}\n\n\n//判断是否为满栈\nbool FullDblStack(DblStack stack)\n{\n\tif (stack.top[1] == ( stack.top[0] + 1 ) )\n\t\treturn true;\n\treturn false;\n}\n\n//左栈进栈\nbool pushLeft(DblStack& stack, SElemType item)\n{\n\tif (FullDblStack(stack))    //判断是否为满栈\n\t{\n\t\tprintf("栈已满，无法进栈\\n");\n\t\treturn false;\t\t\t\t//满栈\n\t}\n\tstack.top[0]++;\t\t\t\t    //左栈栈顶指针加一\n\tstack.V[stack.top[0]] = item;\t//将数据元素进栈\n\treturn true;\t\t\t\t\t//完成操作\n}\n\n//右栈进栈\nbool pushRight(DblStack& stack, SElemType item)\n{\n\tif (FullDblStack(stack))\t//栈已满\n\t{\n\t\tprintf("栈已满，无法进栈\\n");\n\t\treturn false;\t\t\t\t\n\t}\n\tstack.top[1]--;\t\t\t\t    //右栈栈顶指针减1\n\tstack.V[stack.top[1]] = item;\t//将数据元素进栈\n\treturn true;\n}\n\n//左栈出栈\nSElemType popLeft(DblStack& stack)\n{\n\tif (stack.top[0] == -1)\t\t//栈为空\n\t{\n\t\tprintf("左栈为空，无法出栈\\n");\n\t\treturn 0;\t\t\t\t\t\n\t}\n\tSElemType item = stack.V[stack.top[0]];\t\t//取出栈顶数据元素\n\tstack.top[0]--;\t\t\t\t\t\t\t\t//调整左栈顶指针\n\treturn item;\t\t\t\t\t\t\t\t//返回原栈顶元素\n}\n\n//右栈出栈\nSElemType popRight(DblStack& stack)\n{\n\tif (stack.top[1] == stack.m)\t//判断是否为空栈\n\t{\n\t\tprintf("右栈已空，无法出栈\\n");\n\t\treturn 0;\t\t\t\t\t\n\t}\n\tSElemType item = stack.V[stack.top[1]];\t\t//取出右栈栈顶元素\n\tstack.top[1]++;\t\t\t\t\t\t\t\t//调整又栈顶指针\n\treturn item;\t\t\t\t\t\t\t\t//返回原栈顶元素\n}\n\n//遍历双栈\nvoid printDblStack(DblStack stack)\n{\n\tfor (int i = 0; i <= stack.top[0]; i++)       //输出左栈\n\t\tprintf("|%d| ", stack.V[i]);\n\tfor (int i = ++stack.top[1]; i < stack.m; i++)//输出右栈\n\t\tprintf("|%d| ", stack.V[i]);\n\tprintf("\\n");\n}\n\n\nint main()\n{\n\tDblStack stack;\n\tint Maxsize;\n\tcout << "输入栈的容纳长度\\n";\n\tcin >> Maxsize;\n\tInitDblStack(stack, Maxsize);\t\t\t\t\t\t\t\t\t\t\t//初始化双栈\n\tif (EmptyDblStack(stack) == 1)\n\t\tcout << "双栈为空\\n";\n\tpushLeft(stack, 1);\t\t\t\t\t\t\t\t\t\t\t\t//左栈进栈\n\tpushLeft(stack, 2);\t\t\t\t\t\t\t\t\t\t\t\t//左栈进栈\n\tpushRight(stack, 4);\t\t\t\t\t\t\t\t\t\t\t//右栈进栈\n\tpushRight(stack, 5);\t\t\t\t\t\t\t\t\t\t\t//右栈进栈\n\tcout << popLeft(stack) <<endl;\n\tcout << popLeft(stack) <<endl;\n\tcout << popRight(stack) <<endl;\n\tcout << popRight(stack) <<endl;\n\treturn 0;\n}\n\n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br"),n("span",{staticClass:"line-number"},[t._v("46")]),n("br"),n("span",{staticClass:"line-number"},[t._v("47")]),n("br"),n("span",{staticClass:"line-number"},[t._v("48")]),n("br"),n("span",{staticClass:"line-number"},[t._v("49")]),n("br"),n("span",{staticClass:"line-number"},[t._v("50")]),n("br"),n("span",{staticClass:"line-number"},[t._v("51")]),n("br"),n("span",{staticClass:"line-number"},[t._v("52")]),n("br"),n("span",{staticClass:"line-number"},[t._v("53")]),n("br"),n("span",{staticClass:"line-number"},[t._v("54")]),n("br"),n("span",{staticClass:"line-number"},[t._v("55")]),n("br"),n("span",{staticClass:"line-number"},[t._v("56")]),n("br"),n("span",{staticClass:"line-number"},[t._v("57")]),n("br"),n("span",{staticClass:"line-number"},[t._v("58")]),n("br"),n("span",{staticClass:"line-number"},[t._v("59")]),n("br"),n("span",{staticClass:"line-number"},[t._v("60")]),n("br"),n("span",{staticClass:"line-number"},[t._v("61")]),n("br"),n("span",{staticClass:"line-number"},[t._v("62")]),n("br"),n("span",{staticClass:"line-number"},[t._v("63")]),n("br"),n("span",{staticClass:"line-number"},[t._v("64")]),n("br"),n("span",{staticClass:"line-number"},[t._v("65")]),n("br"),n("span",{staticClass:"line-number"},[t._v("66")]),n("br"),n("span",{staticClass:"line-number"},[t._v("67")]),n("br"),n("span",{staticClass:"line-number"},[t._v("68")]),n("br"),n("span",{staticClass:"line-number"},[t._v("69")]),n("br"),n("span",{staticClass:"line-number"},[t._v("70")]),n("br"),n("span",{staticClass:"line-number"},[t._v("71")]),n("br"),n("span",{staticClass:"line-number"},[t._v("72")]),n("br"),n("span",{staticClass:"line-number"},[t._v("73")]),n("br"),n("span",{staticClass:"line-number"},[t._v("74")]),n("br"),n("span",{staticClass:"line-number"},[t._v("75")]),n("br"),n("span",{staticClass:"line-number"},[t._v("76")]),n("br"),n("span",{staticClass:"line-number"},[t._v("77")]),n("br"),n("span",{staticClass:"line-number"},[t._v("78")]),n("br"),n("span",{staticClass:"line-number"},[t._v("79")]),n("br"),n("span",{staticClass:"line-number"},[t._v("80")]),n("br"),n("span",{staticClass:"line-number"},[t._v("81")]),n("br"),n("span",{staticClass:"line-number"},[t._v("82")]),n("br"),n("span",{staticClass:"line-number"},[t._v("83")]),n("br"),n("span",{staticClass:"line-number"},[t._v("84")]),n("br"),n("span",{staticClass:"line-number"},[t._v("85")]),n("br"),n("span",{staticClass:"line-number"},[t._v("86")]),n("br"),n("span",{staticClass:"line-number"},[t._v("87")]),n("br"),n("span",{staticClass:"line-number"},[t._v("88")]),n("br"),n("span",{staticClass:"line-number"},[t._v("89")]),n("br"),n("span",{staticClass:"line-number"},[t._v("90")]),n("br"),n("span",{staticClass:"line-number"},[t._v("91")]),n("br"),n("span",{staticClass:"line-number"},[t._v("92")]),n("br"),n("span",{staticClass:"line-number"},[t._v("93")]),n("br"),n("span",{staticClass:"line-number"},[t._v("94")]),n("br"),n("span",{staticClass:"line-number"},[t._v("95")]),n("br"),n("span",{staticClass:"line-number"},[t._v("96")]),n("br"),n("span",{staticClass:"line-number"},[t._v("97")]),n("br"),n("span",{staticClass:"line-number"},[t._v("98")]),n("br"),n("span",{staticClass:"line-number"},[t._v("99")]),n("br"),n("span",{staticClass:"line-number"},[t._v("100")]),n("br"),n("span",{staticClass:"line-number"},[t._v("101")]),n("br"),n("span",{staticClass:"line-number"},[t._v("102")]),n("br"),n("span",{staticClass:"line-number"},[t._v("103")]),n("br"),n("span",{staticClass:"line-number"},[t._v("104")]),n("br"),n("span",{staticClass:"line-number"},[t._v("105")]),n("br"),n("span",{staticClass:"line-number"},[t._v("106")]),n("br"),n("span",{staticClass:"line-number"},[t._v("107")]),n("br"),n("span",{staticClass:"line-number"},[t._v("108")]),n("br"),n("span",{staticClass:"line-number"},[t._v("109")]),n("br"),n("span",{staticClass:"line-number"},[t._v("110")]),n("br"),n("span",{staticClass:"line-number"},[t._v("111")]),n("br"),n("span",{staticClass:"line-number"},[t._v("112")]),n("br"),n("span",{staticClass:"line-number"},[t._v("113")]),n("br"),n("span",{staticClass:"line-number"},[t._v("114")]),n("br"),n("span",{staticClass:"line-number"},[t._v("115")]),n("br"),n("span",{staticClass:"line-number"},[t._v("116")]),n("br"),n("span",{staticClass:"line-number"},[t._v("117")]),n("br"),n("span",{staticClass:"line-number"},[t._v("118")]),n("br"),n("span",{staticClass:"line-number"},[t._v("119")]),n("br"),n("span",{staticClass:"line-number"},[t._v("120")]),n("br"),n("span",{staticClass:"line-number"},[t._v("121")]),n("br"),n("span",{staticClass:"line-number"},[t._v("122")]),n("br"),n("span",{staticClass:"line-number"},[t._v("123")]),n("br"),n("span",{staticClass:"line-number"},[t._v("124")]),n("br"),n("span",{staticClass:"line-number"},[t._v("125")]),n("br"),n("span",{staticClass:"line-number"},[t._v("126")]),n("br"),n("span",{staticClass:"line-number"},[t._v("127")]),n("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);