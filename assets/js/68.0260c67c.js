(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{504:function(t,s,a){"use strict";a.r(s);var e=a(16),v=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("有关数据结构的一些笔记。")]),t._v(" "),a("h2",{attrs:{id:"_1-交换排序和选择排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-交换排序和选择排序"}},[t._v("#")]),t._v(" 1.交换排序和选择排序")]),t._v(" "),a("p",[t._v("交换排序和选择排序的不同主要体现在选择和交换上。")]),t._v(" "),a("p",[t._v("例如处理第一个元素（比如此时做的是降序，即从大到小）")]),t._v(" "),a("p",[t._v("对于交换排序：在排序过程中会拿第一个元素和后面的元素挨个比较，只要是比第一个元素大的，都和第一个元素交换。（用"),a("strong",[t._v("交换元素")]),t._v("来找到相应元素）")]),t._v(" "),a("p",[t._v("对于选择排序：会用一个额外的变量，记下数组下标。在排序过程中会拿第一个元素和后面的元素挨个比较，找到最大元素的下标。（用"),a("strong",[t._v("数组下标")]),t._v("来找到相应元素）")]),t._v(" "),a("p",[t._v("综上所述，交换排序就是只要遇到更大的就交换，每次交换的后面可能会遇到更大的，因此可能不是最终结果。而选择排序每次交换都会确定一个元素，交换后后面没有比它更大的。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("交换排序有：冒泡排序、快速排序。")]),t._v(" "),a("p",[t._v("冒泡排序：最坏的情况是每次都需要交换,  时间复杂度为O(n"),a("sup",[t._v("2")]),t._v(").")]),t._v(" "),a("p",[t._v("最佳的情况是内循环遍历一次后发现排序是对的, 因此退出循环, 时间复杂度为O(n)")]),t._v(" "),a("p",[t._v("快速排序：平均时间复杂为O(nlog"),a("sub",[t._v("2")]),t._v("n)")]),t._v(" "),a("p",[t._v("最糟糕时将达到O(n"),a("sup",[t._v("2")]),t._v(")的时间复杂度")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("对于选择排序，无论是哪种情况，哪怕原数组已排序完成，它也将花费将近n"),a("sup",[t._v("2")]),t._v("/2次遍历来确认一遍，时间复杂度为O(n"),a("sup",[t._v("2")]),t._v(")")]),t._v(" "),a("h2",{attrs:{id:"_2-快排"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-快排"}},[t._v("#")]),t._v(" 2.快排")]),t._v(" "),a("p",[t._v("假设初始序列是"),a("strong",[t._v("6 1 2 7 9 3 4 5 10 8")])]),t._v(" "),a("p",[t._v("我们选择第一个数i作为"),a("strong",[t._v("基准")])]),t._v(" "),a("div",{staticClass:"center-container"},[a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Stefancharles/images@master/20211025/3.1.3r0sg0e0ge40.png",alt:""}})])]),a("p",[t._v("由于我们选的是i作为基准，所以我们让对面的j先出动（j--），直到找到一个小于 6 的数停下来。")]),t._v(" "),a("p",[t._v("接下来哨兵 i 再一步一步向右挪动（即 i++），直到找到一个数大于 6 的数停下来。最后哨兵 j 停在了数字 5 面前，哨兵 i 停在了数字 7 面前。")]),t._v(" "),a("div",{staticClass:"center-container"},[a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Stefancharles/images@master/20211025/3.2.5khbukk349k0.png",alt:""}})])]),a("p",[t._v("现在交换哨兵 i 和哨兵 j 所指向的元素的值。交换之后的序列如下。")]),t._v(" "),a("div",{staticClass:"center-container"},[a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Stefancharles/images@master/20211025/3.3.22vny0xk62dc.png",alt:""}})])]),a("p",[t._v("接下来开始哨兵 j 继续向左挪动（再友情提醒，每次必须是哨兵 j 先出发）。他发现了 4（比基准数 6 要小，满足要求）之后停了下来。哨兵 i 也继续向右挪动的，他发现了 9（比基准数 6 要大，满足要求）之后停了下来。")]),t._v(" "),a("div",{staticClass:"center-container"},[a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Stefancharles/images@master/20211025/3.4.2q94ziy0h2g0.png",alt:""}})])]),a("p",[t._v("此时再次进行交换，交换之后的序列如下。")]),t._v(" "),a("div",{staticClass:"center-container"},[a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Stefancharles/images@master/20211025/3.5.1fn7oloob59c.png",alt:""}})])]),a("p",[t._v("哨兵 j 继续向左挪动，他发现了 3（比基准数 6 要小，满足要求）之后又停了下来。哨兵 i 继续向右移动，注意！此时哨兵 i 和哨兵 j 相遇了，哨兵 i 和哨兵 j 都走到 3 面前。说明此时探测结束。")]),t._v(" "),a("div",{staticClass:"center-container"},[a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Stefancharles/images@master/20211025/3.6.1ak2j7na4k68.png",alt:""}})])]),a("p",[t._v("我们将基准数 6 和 3 进行交换。")]),t._v(" "),a("div",{staticClass:"center-container"},[a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Stefancharles/images@master/20211025/3.7.6sttok9klo00.png",alt:""}})])]),a("p",[t._v("交换之后的序列如下。")]),t._v(" "),a("div",{staticClass:"center-container"},[a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Stefancharles/images@master/20211025/3.8.2tcp4x38now0.png",alt:""}})])]),a("p",[t._v("到此第一轮探测真正结束。此时以基准数 6 为分界点，6 左边的数都小于等于 6，6 右边的数都大于等于 6。回顾一下刚才的过程，其实哨兵 j 的使命就是要找小于基准数的数，而哨兵 i 的使命就是要找大于基准数的数，直到 i 和 j 碰头为止。")]),t._v(" "),a("p",[t._v("接下来，对基准左右两边分别继续进行如上操作即可。")])])}),[],!1,null,null,null);s.default=v.exports}}]);