(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{508:function(s,n,a){"use strict";a.r(n);var e=a(16),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("有关数据结构链表的一些笔记。")]),s._v(" "),a("h2",{attrs:{id:"_1-反转单链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-反转单链表"}},[s._v("#")]),s._v(" 1.反转单链表")]),s._v(" "),a("h3",{attrs:{id:"_1-1迭代"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1迭代"}},[s._v("#")]),s._v(" 1.1迭代")]),s._v(" "),a("ul",[a("li",[s._v("1、双指针分别指向链表中的相邻节点，初始状态为当前指针指向头节点，前指针指向NULL；")]),s._v(" "),a("li",[s._v("2、修改当前指针指向的节点的指向为前一个节点，然后当前指针和前指针同时指向下一个节点；")]),s._v(" "),a("li",[s._v("3、循环往复，直到当前指针指向的节点为NULL，返回前指针指向的节点。")])]),s._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class Solution \n{ \n    public ListNode reverseList(ListNode head) \n    {  \n        ListNode pre = null;\n        ListNode cur = head;\n        ListNode tmp = null;  \n        while(cur!=null) \n        {    \n            tmp = cur.next;   \n            cur.next = pre;   \n            cur = tmp;  \n        }  \n    return pre; \n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h3",{attrs:{id:"_1-2递归"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2递归"}},[s._v("#")]),s._v(" 1.2递归")]),s._v(" "),a("p",[s._v("终止条件是当前节点或者下一个节点==null。在函数内部，改变节点的指向，也就是 head 的下一个节点指向 head。")]),s._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class Solution \n{ \n    public ListNode reverseList(ListNode head) \n    { \n        if(head==null || head.next==null) \n        {\n            return head;\n        }\n        ListNode cur = reverseList(head.next);\n        head.next = null;\n        return cur; \n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"_2-删除单链表的倒数第n个节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-删除单链表的倒数第n个节点"}},[s._v("#")]),s._v(" 2.删除单链表的倒数第N个节点")]),s._v(" "),a("p",[s._v("第一个指针从列表的开头向前移动 n+1 步，而第二个指针将从列表的开头出发。")]),s._v(" "),a("p",[s._v("现在，这两个指针被 n 个结点分开。我们通过同时移动两个指针向前来保持这个恒定的间隔，直到第一个指针到达最后一个结点。")]),s._v(" "),a("p",[s._v("此时第二个指针将指向从最后一个结点数起的第 n 个结点。我们重新链接第二个指针所引用的结点的 next 指针指向该结点的下下个结点。")]),s._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class Solution \n{\n    public ListNode removeNthFromEnd(ListNode head, int n) \n    {    \n        ListNode dummy = new ListNode(0);    \n        dummy.next = head;    \n        ListNode first = dummy;    \n        ListNode second = dummy;  \n        for (int i = 1; i <= n + 1; i++) \n        {        \n            first = first.next;    \n        }  \n        while (first != null) \n        {        \n            first = first.next;        \n            second = second.next;    \n        }    \n        second.next = second.next.next;    \n        return dummy.next;    \n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);